---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import { getPlatformBySlug } from '../../data/platforms.js';

export async function getStaticPaths() {
  const { platforms } = await import('../../data/platforms.js');

  return platforms.map((platform) => ({
    params: { slug: platform.slug },
    props: { platform },
  }));
}

const { platform } = Astro.props;

if (!platform) {
  return Astro.redirect('/browse');
}

// Format price
const formatPrice = (price) => (price / 100).toLocaleString();

// Get package tier styling
const getTierBadge = (tier) => {
  const badges = {
    'blueprint': {
      text: 'Blueprint',
      color: 'bg-blue-500/20 text-blue-400 border-blue-400/30',
      glow: 'shadow-blue-400/20'
    },
    'launch_ready': {
      text: 'Launch Ready',
      color: 'bg-green-500/20 text-green-400 border-green-400/30',
      glow: 'shadow-green-400/20'
    },
    'enterprise': {
      text: 'Enterprise',
      color: 'bg-purple-500/20 text-purple-400 border-purple-400/30',
      glow: 'shadow-purple-400/20'
    }
  };
  return badges[tier] || {
    text: 'Platform',
    color: 'bg-gray-500/20 text-gray-400 border-gray-400/30',
    glow: 'shadow-gray-400/20'
  };
};

const tierBadge = getTierBadge(platform.packageTier);
---

<Layout title={`${platform.title} - TechFlunky`} description={platform.description}>
  <main class="min-h-screen bg-black">
    <Navigation />

    <!-- Hero Section -->
    <section class="relative pt-24 pb-16 bg-gradient-to-br from-black via-gray-900 to-black">
      <!-- Background Pattern -->
      <div class="absolute inset-0 opacity-5">
        <div class="h-full w-full" style="background-image: url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" stroke=\"%23fff\" stroke-width=\"1\"%3E%3Cpath d=\"M0 0h60v60H0z\"/%3E%3C/g%3E%3C/svg%3E'); background-size: 60px 60px;"></div>
      </div>

      <div class="container mx-auto px-4 relative z-10">
        <!-- Breadcrumb -->
        <nav class="flex items-center space-x-2 text-sm text-gray-400 mb-8">
          <a href="/" class="hover:text-yellow-400 transition-colors">Home</a>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
          <a href="/browse" class="hover:text-yellow-400 transition-colors">Browse</a>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
          <span class="text-gray-300">{platform.industry}</span>
        </nav>

        <div class="grid lg:grid-cols-3 gap-12">
          <!-- Main Content -->
          <div class="lg:col-span-2 space-y-8">
            <!-- Header -->
            <div class="space-y-6">
              <!-- Badges -->
              <div class="flex flex-wrap items-center gap-3">
                <span class={`inline-flex items-center px-4 py-2 rounded-full text-sm font-bold border backdrop-blur-sm ${tierBadge.color}`}>
                  {tierBadge.text}
                </span>

                {platform.exclusive && (
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-purple-500/20 text-purple-400 border border-purple-400/50">
                    EXCLUSIVE
                  </span>
                )}

                {platform.urgency === 'limited_time' && (
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-orange-500/20 text-orange-400 border border-orange-400/50 animate-pulse">
                    LIMITED TIME
                  </span>
                )}

                <!-- AI Score -->
                <div class="flex items-center gap-2 bg-yellow-400/10 border border-yellow-400/30 rounded-full px-3 py-1">
                  <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                  </svg>
                  <span class="text-yellow-400 text-sm font-bold">AI Score: {platform.aiScore}/100</span>
                </div>
              </div>

              <!-- Title -->
              <h1 class="text-4xl md:text-5xl lg:text-6xl font-black text-white leading-tight">
                {platform.title}
              </h1>

              <!-- Description -->
              <p class="text-xl text-gray-300 leading-relaxed">
                {platform.longDescription}
              </p>

              <!-- Key Metrics -->
              <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
                <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-xl p-4 border border-gray-700/50">
                  <div class="text-sm text-gray-400 mb-1">Market Size</div>
                  <div class="text-2xl font-bold text-white">{platform.marketSize}</div>
                </div>
                <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-xl p-4 border border-gray-700/50">
                  <div class="text-sm text-gray-400 mb-1">Profit Margin</div>
                  <div class="text-2xl font-bold text-green-400">{platform.profitMargin}</div>
                </div>
                <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-xl p-4 border border-gray-700/50">
                  <div class="text-sm text-gray-400 mb-1">Projected ARR</div>
                  <div class="text-2xl font-bold text-yellow-400">{platform.projectedARR}</div>
                </div>
                <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-xl p-4 border border-gray-700/50">
                  <div class="text-sm text-gray-400 mb-1">Time to Market</div>
                  <div class="text-2xl font-bold text-blue-400">{platform.timeToMarket}</div>
                </div>
              </div>
            </div>

            <!-- Tabbed Content -->
            <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-2xl border border-gray-700/50 overflow-hidden">
              <!-- Tab Navigation -->
              <div class="border-b border-gray-700/50">
                <nav class="flex">
                  <button class="tab-btn active flex-1 px-6 py-4 text-center font-semibold text-yellow-400 bg-yellow-400/10 border-b-2 border-yellow-400" data-tab="overview">
                    Overview
                  </button>
                  <button class="tab-btn flex-1 px-6 py-4 text-center font-semibold text-gray-400 hover:text-white hover:bg-gray-800/50 transition-all" data-tab="features">
                    Features
                  </button>
                  <button class="tab-btn flex-1 px-6 py-4 text-center font-semibold text-gray-400 hover:text-white hover:bg-gray-800/50 transition-all" data-tab="tech">
                    Technical
                  </button>
                  <button class="tab-btn flex-1 px-6 py-4 text-center font-semibold text-gray-400 hover:text-white hover:bg-gray-800/50 transition-all" data-tab="package">
                    Package
                  </button>
                </nav>
              </div>

              <!-- Tab Content -->
              <div class="p-8">
                <!-- Overview Tab -->
                <div id="overview" class="tab-content">
                  <div class="space-y-6">
                    <div>
                      <h3 class="text-2xl font-bold text-white mb-4">Business Opportunity</h3>
                      <div class="grid md:grid-cols-2 gap-6">
                        <div class="space-y-4">
                          <div class="flex items-center gap-3">
                            <div class="w-8 h-8 bg-green-500/20 rounded-full flex items-center justify-center">
                              <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                              </svg>
                            </div>
                            <div>
                              <div class="font-semibold text-white">Market Validated</div>
                              <div class="text-sm text-gray-400">Proven demand and customer validation</div>
                            </div>
                          </div>
                          <div class="flex items-center gap-3">
                            <div class="w-8 h-8 bg-blue-500/20 rounded-full flex items-center justify-center">
                              <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                              </svg>
                            </div>
                            <div>
                              <div class="font-semibold text-white">Ready to Launch</div>
                              <div class="text-sm text-gray-400">{platform.timeToMarket} to market</div>
                            </div>
                          </div>
                        </div>
                        <div class="space-y-4">
                          <div class="flex items-center gap-3">
                            <div class="w-8 h-8 bg-yellow-500/20 rounded-full flex items-center justify-center">
                              <svg class="w-4 h-4 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                              </svg>
                            </div>
                            <div>
                              <div class="font-semibold text-white">High Margins</div>
                              <div class="text-sm text-gray-400">{platform.profitMargin} profit margin</div>
                            </div>
                          </div>
                          <div class="flex items-center gap-3">
                            <div class="w-8 h-8 bg-purple-500/20 rounded-full flex items-center justify-center">
                              <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                              </svg>
                            </div>
                            <div>
                              <div class="font-semibold text-white">Scalable Platform</div>
                              <div class="text-sm text-gray-400">{platform.architecture} architecture</div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div>
                      <h3 class="text-xl font-bold text-white mb-3">Revenue Model</h3>
                      <p class="text-gray-300 leading-relaxed">
                        {platform.revenueModel} targeting {platform.targetCustomers.toLowerCase()} with projected ARR of {platform.projectedARR} within the first 24 months.
                      </p>
                    </div>
                  </div>
                </div>

                <!-- Features Tab -->
                <div id="features" class="tab-content hidden">
                  <div class="space-y-6">
                    <h3 class="text-2xl font-bold text-white mb-4">Platform Features</h3>
                    <div class="grid md:grid-cols-2 gap-4">
                      {platform.features.map((feature) => (
                        <div class="flex items-center gap-3 p-3 bg-black/30 rounded-lg border border-gray-700/50">
                          <div class="w-2 h-2 bg-yellow-400 rounded-full flex-shrink-0"></div>
                          <span class="text-gray-300">{feature}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>

                <!-- Technical Tab -->
                <div id="tech" class="tab-content hidden">
                  <div class="space-y-6">
                    <h3 class="text-2xl font-bold text-white mb-4">Technical Specifications</h3>

                    <div class="grid md:grid-cols-2 gap-8">
                      <div>
                        <h4 class="text-lg font-semibold text-white mb-3">Technology Stack</h4>
                        <div class="flex flex-wrap gap-2">
                          {platform.techStack.map((tech) => (
                            <span class="bg-gray-800/50 text-gray-300 text-sm px-3 py-1 rounded-full border border-gray-600/50">
                              {tech}
                            </span>
                          ))}
                        </div>
                      </div>

                      <div>
                        <h4 class="text-lg font-semibold text-white mb-3">Deployment</h4>
                        <div class="space-y-2">
                          <div class="flex justify-between">
                            <span class="text-gray-400">Architecture:</span>
                            <span class="text-gray-300">{platform.architecture}</span>
                          </div>
                          <div class="flex justify-between">
                            <span class="text-gray-400">Deployment:</span>
                            <span class="text-gray-300">{platform.deployment}</span>
                          </div>
                          <div class="flex justify-between">
                            <span class="text-gray-400">Development Time:</span>
                            <span class="text-gray-300">{platform.developmentTime}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Package Tab -->
                <div id="package" class="tab-content hidden">
                  <div class="space-y-6">
                    <h3 class="text-2xl font-bold text-white mb-4">What's Included</h3>

                    {platform.includes.map((section) => (
                      <div class="bg-black/30 rounded-xl p-6 border border-gray-700/50">
                        <h4 class="text-lg font-semibold text-yellow-400 mb-4 flex items-center gap-2">
                          <svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                          </svg>
                          {section.category}
                        </h4>
                        <ul class="space-y-2">
                          {section.items.map((item) => (
                            <li class="text-gray-300 flex items-start gap-2">
                              <div class="w-1.5 h-1.5 bg-yellow-400 rounded-full flex-shrink-0 mt-2"></div>
                              {item}
                            </li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Sidebar -->
          <div class="lg:col-span-1">
            <div class="sticky top-24 space-y-8">
              <!-- Purchase Card -->
              <div class="bg-gradient-to-br from-gray-900/90 to-black/90 backdrop-blur-md rounded-2xl p-6 border border-yellow-400/20 hover:border-yellow-400/40 transition-all duration-300">
                <div class="text-center mb-6">
                  <div class="text-4xl font-black text-yellow-400 mb-2">
                    ${formatPrice(platform.price)}
                  </div>
                  <p class="text-gray-400">Complete business package</p>
                </div>

                <button
                  id="purchase-button"
                  class="w-full bg-gradient-to-r from-yellow-400 to-yellow-500 text-black py-4 px-6 rounded-xl font-bold text-lg hover:from-yellow-300 hover:to-yellow-400 transition-all duration-300 transform hover:scale-105 hover:shadow-2xl hover:shadow-yellow-400/20 mb-6"
                >
                  Purchase This Platform
                </button>

                <!-- Trust Indicators -->
                <div class="space-y-3 mb-6 text-sm">
                  <div class="flex items-center gap-2 text-gray-300">
                    <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    Secure payment via Stripe
                  </div>
                  <div class="flex items-center gap-2 text-gray-300">
                    <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    3-day review period
                  </div>
                  <div class="flex items-center gap-2 text-gray-300">
                    <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    Instant delivery of all materials
                  </div>
                  <div class="flex items-center gap-2 text-gray-300">
                    <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    30-day money-back guarantee
                  </div>
                </div>

                <!-- Stats -->
                <div class="grid grid-cols-2 gap-4 text-center">
                  <div>
                    <div class="text-lg font-bold text-white">{platform.viewsCount.toLocaleString()}</div>
                    <div class="text-xs text-gray-400">Total Views</div>
                  </div>
                  <div>
                    <div class="text-lg font-bold text-white">{platform.developmentTime}</div>
                    <div class="text-xs text-gray-400">Time Saved</div>
                  </div>
                </div>
              </div>

              <!-- Seller Info -->
              {platform.seller && (
                <div class="bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-2xl p-6 border border-gray-700/50">
                  <h3 class="text-lg font-bold text-white mb-4">About the Seller</h3>

                  <div class="flex items-center gap-4 mb-4">
                    <div class="w-12 h-12 bg-gradient-to-br from-yellow-400/20 to-yellow-500/20 rounded-full border border-yellow-400/30 flex items-center justify-center">
                      <span class="text-yellow-400 font-bold text-lg">
                        {platform.seller.name.charAt(0)}
                      </span>
                    </div>
                    <div>
                      <div class="flex items-center gap-2">
                        <span class="font-semibold text-white">{platform.seller.name}</span>
                        {platform.seller.verified && (
                          <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                          </svg>
                        )}
                      </div>
                      <div class="flex items-center gap-1 text-sm">
                        <div class="flex">
                          {Array.from({ length: 5 }, (_, i) => (
                            <svg class={`w-3 h-3 ${i < Math.floor(platform.seller.rating) ? 'text-yellow-400' : 'text-gray-600'}`} fill="currentColor" viewBox="0 0 20 20">
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                            </svg>
                          ))}
                        </div>
                        <span class="text-yellow-400 font-medium ml-1">{platform.seller.rating}</span>
                        <span class="text-gray-400">({platform.seller.reviewsCount} reviews)</span>
                      </div>
                    </div>
                  </div>

                  <p class="text-gray-300 text-sm mb-4 leading-relaxed">
                    {platform.seller.description}
                  </p>

                  <!-- Expertise -->
                  <div>
                    <div class="text-sm text-gray-400 mb-2">Expertise</div>
                    <div class="flex flex-wrap gap-2">
                      {platform.seller.expertise.map((skill) => (
                        <span class="bg-gray-800/50 text-gray-300 text-xs px-2 py-1 rounded border border-gray-600/50">
                          {skill}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Related Platforms -->
    <section class="py-16 bg-gradient-to-r from-black via-gray-900 to-black">
      <div class="container mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-white mb-4">Similar Platforms</h2>
          <p class="text-gray-400">Discover other opportunities in {platform.industry}</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
          <div class="text-center py-8 text-gray-400">
            <p>More platforms coming soon...</p>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  // Tab functionality
  const tabButtons = document.querySelectorAll('.tab-btn');
  const tabContents = document.querySelectorAll('.tab-content');

  tabButtons.forEach(button => {
    button.addEventListener('click', () => {
      const tabId = button.dataset.tab;

      // Remove active from all buttons and contents
      tabButtons.forEach(btn => {
        btn.classList.remove('active', 'text-yellow-400', 'bg-yellow-400/10', 'border-b-2', 'border-yellow-400');
        btn.classList.add('text-gray-400');
      });
      tabContents.forEach(content => content.classList.add('hidden'));

      // Add active to clicked button and corresponding content
      button.classList.add('active', 'text-yellow-400', 'bg-yellow-400/10', 'border-b-2', 'border-yellow-400');
      button.classList.remove('text-gray-400');
      document.getElementById(tabId).classList.remove('hidden');
    });
  });

  // Purchase button functionality
  document.getElementById('purchase-button')?.addEventListener('click', async () => {
    const button = document.getElementById('purchase-button');
    const originalText = button.textContent;

    button.disabled = true;
    button.textContent = 'Processing...';
    button.classList.add('opacity-75');

    try {
      // Simulate purchase flow - in real implementation, this would create Stripe checkout
      await new Promise(resolve => setTimeout(resolve, 1000));

      // Redirect to checkout or handle purchase
      alert('Purchase functionality coming soon! This would integrate with Stripe checkout.');

    } catch (error) {
      console.error('Purchase error:', error);
      alert('Failed to start purchase. Please try again.');
    } finally {
      button.disabled = false;
      button.textContent = originalText;
      button.classList.remove('opacity-75');
    }
  });

  // Smooth scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in-up');
      }
    });
  }, observerOptions);

  document.addEventListener('DOMContentLoaded', () => {
    // Observe elements for animation
    document.querySelectorAll('.tab-content, .bg-gradient-to-br').forEach(el => {
      observer.observe(el);
    });
  });
</script>

<style>
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  /* Tab hover effects */
  .tab-btn {
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .tab-btn:hover {
    transform: translateY(-2px);
  }

  .tab-btn.active {
    position: relative;
  }

  /* Enhanced hover effects */
  .bg-gradient-to-br:hover {
    transform: translateY(-2px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #111827;
  }

  ::-webkit-scrollbar-thumb {
    background: #fbbf24;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #f59e0b;
  }
</style>
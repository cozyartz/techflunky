---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
---

<Layout title="Browse Business Platforms - TechFlunky">
  <main class="min-h-screen bg-black">
    <Navigation currentPage="browse" />

    <!-- Header -->
    <section class="relative min-h-screen bg-gradient-to-br from-black via-gray-900 to-black text-white overflow-hidden flex items-center">
      <!-- Subtle grid pattern -->
      <div class="absolute inset-0 opacity-5">
        <div class="h-full w-full bg-grid-pattern"></div>
      </div>

      <div class="container mx-auto px-4 relative z-10 pt-24">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-black leading-tight mb-6 animate-slide-up">
            <span class="block text-white">Browse Complete</span>
            <span class="block text-yellow-400">Business Platforms</span>
          </h1>
          <p class="text-xl md:text-2xl text-gray-300 mb-8 animate-slide-up" style="animation-delay: 0.1s">
            Production-ready codebases with full documentation — built by developers, validated by the market.
          </p>

          <!-- Search and Filter Bar -->
          <div class="bg-black/50 backdrop-blur-sm rounded-xl p-6 mt-8 border border-yellow-400/20 animate-slide-up" style="animation-delay: 0.2s">
            <div class="flex flex-col md:flex-row gap-4">
              <input
                id="searchInput"
                type="text"
                placeholder="Search platforms..."
                class="flex-grow px-4 py-3 rounded-lg bg-gray-900/50 backdrop-blur-sm border border-yellow-400/30 text-white placeholder-gray-400 focus:outline-none focus:border-yellow-400/60 focus:bg-gray-900/70"
              />
              <select id="categoryFilter" class="px-4 py-3 rounded-lg bg-gray-900/50 backdrop-blur-sm border border-yellow-400/30 text-white focus:outline-none focus:border-yellow-400/60">
                <option value="">All Categories</option>
                <option value="hr-compliance">HR Compliance</option>
                <option value="legal-saas">Legal SaaS</option>
                <option value="fintech">FinTech</option>
                <option value="healthcare">Healthcare</option>
                <option value="marketing-tools">Marketing Tools</option>
                <option value="restaurant-tech">Restaurant Tech</option>
                <option value="real-estate">Real Estate</option>
                <option value="fitness-tech">Fitness Tech</option>
                <option value="education-tech">Education Tech</option>
                <option value="iot-platform">IoT Platform</option>
              </select>
              <select id="priceFilter" class="px-4 py-3 rounded-lg bg-gray-900/50 backdrop-blur-sm border border-yellow-400/30 text-white focus:outline-none focus:border-yellow-400/60">
                <option value="">All Prices</option>
                <option value="0-15000">Under $15K</option>
                <option value="15000-35000">$15K - $35K</option>
                <option value="35000+">$35K+</option>
              </select>
              <select id="sortFilter" class="px-4 py-3 rounded-lg bg-gray-900/50 backdrop-blur-sm border border-yellow-400/30 text-white focus:outline-none focus:border-yellow-400/60">
                <option value="created_at-desc">Newest First</option>
                <option value="created_at-asc">Oldest First</option>
                <option value="price-asc">Price: Low to High</option>
                <option value="price-desc">Price: High to Low</option>
                <option value="ai_score-desc">Highest AI Score</option>
                <option value="views_count-desc">Most Popular</option>
              </select>
            </div>
          </div>
        </div>
      </div>

      <!-- Scroll indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
        <svg class="w-6 h-6 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
        </svg>
      </div>
    </section>

    <!-- Dynamic Listings Grid -->
    <section class="py-24 bg-gradient-to-br from-black to-gray-900">
      <div class="container mx-auto px-4">
        <div id="listingsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          <!-- Loading skeleton -->
          <div id="loadingSkeleton" class="col-span-full">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
              {Array.from({length: 8}).map((_, i) => (
                <div key={i} class="bg-gray-900/50 rounded-xl p-6 border border-gray-700 animate-pulse">
                  <div class="h-4 bg-gray-700 rounded mb-4"></div>
                  <div class="h-8 bg-gray-700 rounded mb-3"></div>
                  <div class="h-3 bg-gray-700 rounded mb-2"></div>
                  <div class="h-3 bg-gray-700 rounded mb-4"></div>
                  <div class="flex justify-between items-center">
                    <div class="h-6 bg-gray-700 rounded w-20"></div>
                    <div class="h-8 bg-gray-700 rounded w-24"></div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          <!-- Listings will be populated here -->
          <div id="listingsGrid" class="col-span-full hidden">
            <!-- Dynamic content will be inserted here -->
          </div>
        </div>

        <!-- Pagination -->
        <div id="paginationContainer" class="flex justify-center items-center mt-12 space-x-4 hidden">
          <button id="prevPage" class="px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition disabled:opacity-50 disabled:cursor-not-allowed" disabled>
            Previous
          </button>
          <span id="pageInfo" class="text-gray-300">Page 1 of 1</span>
          <button id="nextPage" class="px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition disabled:opacity-50 disabled:cursor-not-allowed" disabled>
            Next
          </button>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-24 bg-gradient-to-br from-gray-900 via-black to-gray-900">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <h2 class="text-4xl md:text-5xl font-bold mb-6 text-white leading-tight">
            Ready to Launch Your Next <span class="text-yellow-400">Business</span>?
          </h2>
          <p class="text-xl text-gray-300 mb-12 max-w-2xl mx-auto leading-relaxed">
            Skip 18+ months of development and launch with a proven, market-validated platform
          </p>

          <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
            <a href="/listing/ai-hr-leave-administration-platform" class="group bg-yellow-400 text-black px-10 py-4 rounded-xl font-bold text-lg hover:bg-yellow-300 transition-all duration-300 transform hover:scale-105 hover:shadow-2xl">
              <span class="flex items-center gap-3">
                View Featured Platform
                <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
                </svg>
              </span>
            </a>

            <div class="text-gray-400 font-medium">or</div>

            <a href="/signup" class="group bg-transparent border-2 border-yellow-400 text-yellow-400 px-10 py-4 rounded-xl font-bold text-lg hover:bg-yellow-400 hover:text-black transition-all duration-300 transform hover:scale-105">
              <span class="flex items-center gap-3">
                Get Notified
                <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5-5-5h5v-12"/>
                </svg>
              </span>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="py-12 bg-black border-t border-yellow-400/20">
      <div class="container mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="flex items-center space-x-3 mb-4 md:mb-0">
            <img src="/assets/techflunky-logo.png" alt="TechFlunky" class="w-8 h-8">
            <span class="text-xl font-bold text-white">TechFlunky</span>
          </div>

          <div class="flex items-center space-x-6 text-gray-400">
            <a href="/about" class="hover:text-yellow-400 transition">About</a>
            <a href="/contact" class="hover:text-yellow-400 transition">Contact</a>
            <a href="/terms" class="hover:text-yellow-400 transition">Terms</a>
            <a href="/privacy" class="hover:text-yellow-400 transition">Privacy</a>
          </div>
        </div>

        <div class="text-center mt-8 pt-8 border-t border-gray-800">
          <p class="text-gray-400">
            © 2024 TechFlunky. Connecting builders with entrepreneurs.
          </p>
        </div>
      </div>
    </footer>
  </main>
</Layout>

<script>
  // Modern intersection observer for scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  // Observe elements when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.scroll-fade').forEach(el => {
      observer.observe(el);
    });

    // Initialize search and filter functionality
    initializeBrowseFunctionality();
  });

  // Browse page search and filter functionality
  function initializeBrowseFunctionality() {
    const searchInput = document.querySelector('input[placeholder="Search platforms..."]');
    const categorySelect = document.querySelector('select').nextElementSibling ? document.querySelector('select') : null;
    const priceSelect = document.querySelectorAll('select')[1];
    const platformCards = document.querySelectorAll('[data-platform]');

    // Search functionality
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        const searchTerm = e.target.value.toLowerCase();
        filterPlatforms(searchTerm, getSelectedCategory(), getSelectedPriceRange());
      });
    }

    // Category filter
    if (categorySelect) {
      categorySelect.addEventListener('change', () => {
        const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
        filterPlatforms(searchTerm, getSelectedCategory(), getSelectedPriceRange());
      });
    }

    // Price filter
    if (priceSelect) {
      priceSelect.addEventListener('change', () => {
        const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
        filterPlatforms(searchTerm, getSelectedCategory(), getSelectedPriceRange());
      });
    }

    function getSelectedCategory() {
      return categorySelect ? categorySelect.value : '';
    }

    function getSelectedPriceRange() {
      return priceSelect ? priceSelect.value : '';
    }

    function filterPlatforms(searchTerm, category, priceRange) {
      const platformCards = document.querySelectorAll('[data-platform], .bento-box');
      let visibleCount = 0;

      platformCards.forEach(card => {
        const title = card.querySelector('h3')?.textContent.toLowerCase() || '';
        const description = card.querySelector('p')?.textContent.toLowerCase() || '';
        const cardCategory = card.dataset.category || '';
        const cardPrice = parseInt(card.dataset.price) || 0;

        const matchesSearch = !searchTerm || title.includes(searchTerm) || description.includes(searchTerm);
        const matchesCategory = !category || cardCategory === category;
        const matchesPrice = checkPriceRange(cardPrice, priceRange);

        if (matchesSearch && matchesCategory && matchesPrice) {
          card.style.display = '';
          card.style.opacity = '1';
          visibleCount++;
        } else {
          card.style.display = 'none';
          card.style.opacity = '0.3';
        }
      });

      // Update results count
      updateResultsCount(visibleCount);
    }

    function checkPriceRange(price, range) {
      if (!range) return true;

      switch(range) {
        case '0-15000':
          return price < 15000;
        case '15000-35000':
          return price >= 15000 && price <= 35000;
        case '35000+':
          return price > 35000;
        default:
          return true;
      }
    }

    function updateResultsCount(count) {
      let resultsElement = document.querySelector('.results-count');
      if (!resultsElement) {
        resultsElement = document.createElement('div');
        resultsElement.className = 'results-count text-gray-300 text-sm mt-2';
        const searchBar = document.querySelector('.bg-black\\/50.backdrop-blur-sm.rounded-xl');
        if (searchBar) {
          searchBar.appendChild(resultsElement);
        }
      }
      resultsElement.textContent = `${count} platform${count !== 1 ? 's' : ''} found`;
    }
  }

  // Dynamic listings functionality
  let currentPage = 1;
  let currentFilters = {
    query: '',
    category: '',
    sortBy: 'created_at',
    sortOrder: 'desc'
  };

  async function loadListings(page = 1, filters = {}) {
    try {
      const params = new URLSearchParams({
        page: page.toString(),
        limit: '12',
        ...filters
      });

      const response = await fetch(`/api/listings/search?${params}`);
      const data = await response.json();

      if (data.success) {
        displayListings(data.data.listings);
        updatePagination(data.data.pagination);
        return data.data;
      } else {
        throw new Error(data.error || 'Failed to load listings');
      }
    } catch (error) {
      console.error('Error loading listings:', error);
      showError('Failed to load listings. Please try again.');
      return null;
    }
  }

  function displayListings(listings) {
    const loadingSkeleton = document.getElementById('loadingSkeleton');
    const listingsGrid = document.getElementById('listingsGrid');

    if (loadingSkeleton) loadingSkeleton.classList.add('hidden');
    if (listingsGrid) listingsGrid.classList.remove('hidden');

    if (!listingsGrid) return;

    if (listings.length === 0) {
      listingsGrid.innerHTML = `
        <div class="col-span-full text-center py-12">
          <div class="text-gray-400 text-lg mb-4">No platforms found</div>
          <p class="text-gray-500">Try adjusting your search criteria</p>
        </div>
      `;
      return;
    }

    listingsGrid.innerHTML = `
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        ${listings.map(listing => createListingCard(listing)).join('')}
      </div>
    `;
  }

  function createListingCard(listing) {
    const packageTierBadge = {
      'blueprint': { text: 'Blueprint', color: 'bg-blue-500/20 text-blue-400' },
      'launch_ready': { text: 'Launch Ready', color: 'bg-green-500/20 text-green-400' },
      'enterprise': { text: 'Enterprise', color: 'bg-purple-500/20 text-purple-400' }
    };

    const tier = packageTierBadge[listing.packageTier] || { text: 'Platform', color: 'bg-gray-500/20 text-gray-400' };
    const price = (listing.price / 100).toLocaleString();

    return `
      <div class="bg-gray-900/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700 hover:border-yellow-400/40 transition-all duration-300 hover:-translate-y-1">
        <div class="flex items-center justify-between mb-4">
          <span class="${tier.color} px-3 py-1 rounded-full text-sm font-semibold">${tier.text}</span>
          <div class="flex items-center space-x-1">
            <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
            </svg>
            <span class="text-yellow-400 text-sm font-medium">${listing.aiScore}</span>
          </div>
        </div>

        <h3 class="text-lg font-bold text-white mb-2 line-clamp-2">${listing.title}</h3>
        <p class="text-gray-300 text-sm mb-4 line-clamp-3">${listing.description}</p>

        <div class="space-y-2 mb-4">
          <div class="flex justify-between text-sm">
            <span class="text-gray-400">Industry:</span>
            <span class="text-gray-300">${listing.industry}</span>
          </div>
          <div class="flex justify-between text-sm">
            <span class="text-gray-400">Views:</span>
            <span class="text-gray-300">${listing.viewsCount.toLocaleString()}</span>
          </div>
        </div>

        <div class="flex justify-between items-center mt-auto">
          <div>
            <div class="text-sm text-gray-400">Price</div>
            <span class="text-xl font-bold text-yellow-400">$${price}</span>
          </div>
          <a href="/listing/${listing.slug}"
             class="bg-yellow-400 text-black px-4 py-2 rounded-lg font-semibold hover:bg-yellow-300 transition text-sm">
            View Details
          </a>
        </div>

        ${listing.seller ? `
          <div class="mt-4 pt-4 border-t border-gray-700">
            <div class="flex items-center justify-between text-sm">
              <span class="text-gray-400">Seller:</span>
              <span class="text-gray-300">${listing.seller.name}</span>
            </div>
            ${listing.seller.rating ? `
              <div class="flex items-center justify-between text-sm mt-1">
                <span class="text-gray-400">Rating:</span>
                <span class="text-yellow-400">${listing.seller.rating}/5 (${listing.seller.reviewsCount} reviews)</span>
              </div>
            ` : ''}
          </div>
        ` : ''}
      </div>
    `;
  }

  function updatePagination(pagination) {
    const paginationContainer = document.getElementById('paginationContainer');
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    const pageInfo = document.getElementById('pageInfo');

    if (!paginationContainer || !prevButton || !nextButton || !pageInfo) return;

    // Show pagination if more than one page
    if (pagination.totalPages > 1) {
      paginationContainer.classList.remove('hidden');
    } else {
      paginationContainer.classList.add('hidden');
      return;
    }

    // Update page info
    pageInfo.textContent = `Page ${pagination.page} of ${pagination.totalPages}`;

    // Update button states
    prevButton.disabled = !pagination.hasPrev;
    nextButton.disabled = !pagination.hasNext;

    // Add click handlers
    prevButton.onclick = () => {
      if (pagination.hasPrev) {
        currentPage = pagination.page - 1;
        loadListings(currentPage, currentFilters);
      }
    };

    nextButton.onclick = () => {
      if (pagination.hasNext) {
        currentPage = pagination.page + 1;
        loadListings(currentPage, currentFilters);
      }
    };
  }

  function showError(message) {
    const listingsGrid = document.getElementById('listingsGrid');
    if (listingsGrid) {
      listingsGrid.innerHTML = `
        <div class="col-span-full text-center py-12">
          <div class="text-red-400 text-lg mb-4">${message}</div>
          <button onclick="loadListings(currentPage, currentFilters)"
                  class="bg-yellow-400 text-black px-4 py-2 rounded-lg font-semibold hover:bg-yellow-300 transition">
            Try Again
          </button>
        </div>
      `;
    }
  }

  // Handle filter changes
  function setupFilterHandlers() {
    const searchInput = document.getElementById('searchInput');
    const categoryFilter = document.getElementById('categoryFilter');
    const priceFilter = document.getElementById('priceFilter');
    const sortFilter = document.getElementById('sortFilter');

    // Debounced search
    let searchTimeout;
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          currentFilters.query = e.target.value;
          currentPage = 1;
          loadListings(currentPage, currentFilters);
        }, 300);
      });
    }

    // Category filter
    if (categoryFilter) {
      categoryFilter.addEventListener('change', (e) => {
        currentFilters.category = e.target.value;
        currentPage = 1;
        loadListings(currentPage, currentFilters);
      });
    }

    // Price filter - convert to dollars for API
    if (priceFilter) {
      priceFilter.addEventListener('change', (e) => {
        const priceRange = e.target.value;
        if (priceRange === '0-15000') {
          currentFilters.minPrice = '0';
          currentFilters.maxPrice = '15000';
        } else if (priceRange === '15000-35000') {
          currentFilters.minPrice = '15000';
          currentFilters.maxPrice = '35000';
        } else if (priceRange === '35000+') {
          currentFilters.minPrice = '35000';
          currentFilters.maxPrice = '999999';
        } else {
          delete currentFilters.minPrice;
          delete currentFilters.maxPrice;
        }
        currentPage = 1;
        loadListings(currentPage, currentFilters);
      });
    }

    // Sort filter
    if (sortFilter) {
      sortFilter.addEventListener('change', (e) => {
        const [sortBy, sortOrder] = e.target.value.split('-');
        currentFilters.sortBy = sortBy;
        currentFilters.sortOrder = sortOrder;
        currentPage = 1;
        loadListings(currentPage, currentFilters);
      });
    }
  }

  // Initialize listings on page load
  document.addEventListener('DOMContentLoaded', () => {
    setupFilterHandlers();
    loadListings(1, currentFilters);
  });

  // Smooth scroll for navigation links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const href = (e.target as HTMLAnchorElement).getAttribute('href');
      if (href) {
        document.querySelector(href)?.scrollIntoView({
          behavior: 'smooth'
        });
      }
    });
  });
</script>

<style>
  /* Import styles from index page for consistency */
  :root {
    --yellow-primary: #fbbf24;
    --yellow-secondary: #f59e0b;
    --yellow-glow: rgba(251, 191, 36, 0.2);
    --black-primary: #000000;
    --gray-primary: #111827;
    --gray-secondary: #1f2937;
  }

  .bg-grid-pattern {
    background-image: url("data:image/svg+xml,%3csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3e%3cg fill='none' stroke='%23fff' stroke-width='1'%3e%3cpath d='M0 0h60v60H0z'/%3e%3c/g%3e%3c/svg%3e");
    background-size: 60px 60px;
  }

  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-in-scale {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes glow-pulse {
    0%, 100% {
      box-shadow: 0 0 20px var(--yellow-glow);
    }
    50% {
      box-shadow: 0 0 40px rgba(251, 191, 36, 0.4), 0 0 60px var(--yellow-glow);
    }
  }

  .animate-slide-up {
    animation: slide-up 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    opacity: 0;
  }

  .animate-fade-in {
    animation: fade-in-scale 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    opacity: 0;
  }

  .animate-glow {
    animation: glow-pulse 3s ease-in-out infinite;
  }

  /* Card Hover Effects */
  .card-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card-hover:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5), 0 0 0 1px rgba(251, 191, 36, 0.1);
  }

  /* Custom Scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: var(--gray-primary);
  }

  ::-webkit-scrollbar-thumb {
    background: var(--yellow-primary);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--yellow-secondary);
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
</style>
---
export const prerender = false;
import Layout from '../layouts/Layout.astro';
---

<Layout title="Login - TechFlunky">
  <main class="min-h-screen bg-gradient-to-br from-black via-gray-900 to-black flex items-center justify-center px-4">
    <div class="max-w-md w-full">
      <!-- Logo -->
      <div class="text-center mb-8">
        <img src="/assets/techflunky-logo.png" alt="TechFlunky" class="w-16 h-16 mx-auto mb-4">
        <h1 class="text-3xl font-bold text-white mb-2">Welcome Back</h1>
        <p class="text-gray-400">Sign in to your TechFlunky account</p>
      </div>

      <!-- Login Form -->
      <form id="loginForm" class="bg-gray-900/50 backdrop-blur-sm rounded-2xl p-8 border border-yellow-400/20">
        <div class="space-y-6">
          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-300 mb-2">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-3 bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-yellow-400 focus:ring-2 focus:ring-yellow-400/20"
              placeholder="Enter your email"
            >
          </div>

          <!-- Password -->
          <div>
            <label for="password" class="block text-sm font-medium text-gray-300 mb-2">Password</label>
            <input
              type="password"
              id="password"
              name="password"
              required
              class="w-full px-4 py-3 bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-yellow-400 focus:ring-2 focus:ring-yellow-400/20"
              placeholder="Enter your password"
            >
          </div>

          <!-- Remember me & Forgot password -->
          <div class="flex items-center justify-between">
            <label class="flex items-center">
              <input type="checkbox" class="w-4 h-4 text-yellow-400 bg-gray-800 border-gray-600 rounded focus:ring-yellow-400">
              <span class="ml-2 text-sm text-gray-300">Remember me</span>
            </label>
            <a href="/forgot-password" class="text-sm text-yellow-400 hover:text-yellow-300 transition">
              Forgot password?
            </a>
          </div>

          <!-- Error message -->
          <div id="errorMessage" class="hidden bg-red-500/10 border border-red-500/20 rounded-lg p-3">
            <p class="text-red-400 text-sm"></p>
          </div>

          <!-- Submit button -->
          <button
            type="submit"
            id="loginButton"
            class="w-full bg-yellow-400 text-black py-3 px-4 rounded-lg font-semibold hover:bg-yellow-300 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-2 focus:ring-offset-gray-900"
          >
            <span id="loginButtonText">Sign In</span>
            <span id="loginButtonSpinner" class="hidden">
              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-black inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Signing in...
            </span>
          </button>
        </div>
      </form>

      <!-- Magic Link Section -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-gray-600"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span class="px-2 bg-gray-900 text-gray-400">Or get a magic link</span>
        </div>
      </div>

      <!-- Magic Link Form -->
      <form id="magicLinkForm" class="space-y-4 mb-6">
        <div class="space-y-2">
          <label for="magicEmail" class="block text-sm font-medium text-gray-300">Email address</label>
          <input
            type="email"
            id="magicEmail"
            name="email"
            required
            class="w-full px-3 py-2 border border-gray-600 rounded-lg bg-gray-800/50 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent"
            placeholder="Enter your email for a magic link"
          />
        </div>
        <button
          type="submit"
          id="magicLinkButton"
          class="w-full bg-yellow-400 text-black py-3 px-4 rounded-lg font-semibold hover:bg-yellow-300 transition-colors focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-2 focus:ring-offset-gray-900"
        >
          <span id="magicLinkButtonText">Send Magic Link</span>
          <span id="magicLinkButtonSpinner" class="hidden">
            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-black inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Sending...
          </span>
        </button>
      </form>

      <!-- Magic Link Success Message -->
      <div id="magicLinkSuccess" class="hidden mb-6 p-4 bg-green-900/50 border border-green-600 rounded-lg">
        <div class="flex items-start">
          <svg class="w-5 h-5 text-green-400 mt-0.5 mr-3" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <div>
            <h4 class="font-medium text-green-300">Magic link sent!</h4>
            <p class="text-sm text-green-400 mt-1" id="magicLinkSuccessMessage">Check your email for the magic link to sign in.</p>
            <div id="magicLinkDev" class="hidden mt-2 p-2 bg-yellow-900/50 border border-yellow-600 rounded">
              <p class="text-xs text-yellow-300">Development mode:</p>
              <a id="magicLinkUrl" class="text-xs text-blue-400 hover:text-blue-300 break-all" target="_blank"></a>
            </div>
          </div>
        </div>
      </div>

      <!-- Sign up link -->
      <div class="text-center mt-6">
        <p class="text-gray-400">
          Don't have an account?
          <a href="/register" class="text-yellow-400 hover:text-yellow-300 transition font-medium">Sign up</a>
        </p>
      </div>

      <!-- Or divider -->
      <div class="relative my-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-gray-600"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span class="px-2 bg-gray-900 text-gray-400">Or continue with</span>
        </div>
      </div>

      <!-- OAuth buttons -->
      <div class="space-y-3">
        <button id="googleButton" class="w-full flex items-center justify-center px-4 py-3 border border-gray-600 rounded-lg bg-gray-800/50 text-white hover:bg-gray-700/50 transition">
          <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
            <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
            <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
            <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
          </svg>
          Continue with Google
        </button>
        <button id="githubButton" class="w-full flex items-center justify-center px-4 py-3 border border-gray-600 rounded-lg bg-gray-800/50 text-white hover:bg-gray-700/50 transition">
          <svg class="w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          Continue with GitHub
        </button>
      </div>
    </div>
  </main>

  <script>
    document.getElementById('loginForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
      const errorMessage = document.getElementById('errorMessage');
      const loginButton = document.getElementById('loginButton');
      const loginButtonText = document.getElementById('loginButtonText');
      const loginButtonSpinner = document.getElementById('loginButtonSpinner');

      // Show loading state
      loginButton.disabled = true;
      loginButtonText.classList.add('hidden');
      loginButtonSpinner.classList.remove('hidden');
      errorMessage.classList.add('hidden');

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, password }),
        });

        const data = await response.json();

        if (data.success) {
          // Redirect based on user role
          const user = data.data.user;
          if (user.role === 'admin') {
            window.location.href = '/dashboard/admin';
          } else if (user.role === 'seller') {
            window.location.href = '/dashboard/seller';
          } else if (user.role === 'investor') {
            window.location.href = '/dashboard/investor';
          } else {
            window.location.href = '/browse';
          }
        } else {
          // Show error
          errorMessage.querySelector('p').textContent = data.error;
          errorMessage.classList.remove('hidden');
        }
      } catch (error) {
        errorMessage.querySelector('p').textContent = 'An unexpected error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      } finally {
        // Reset loading state
        loginButton.disabled = false;
        loginButtonText.classList.remove('hidden');
        loginButtonSpinner.classList.add('hidden');
      }
    });

    // GitHub OAuth handler
    const githubButton = document.getElementById('githubButton');
    githubButton.addEventListener('click', () => {
      window.location.href = '/api/auth/github';
    });

    // Google OAuth handler
    const googleButton = document.getElementById('googleButton');
    googleButton.addEventListener('click', () => {
      window.location.href = '/api/auth/google';
    });

    // Magic Link handler
    const magicLinkForm = document.getElementById('magicLinkForm');
    const magicLinkButton = document.getElementById('magicLinkButton');
    const magicLinkButtonText = document.getElementById('magicLinkButtonText');
    const magicLinkButtonSpinner = document.getElementById('magicLinkButtonSpinner');
    const magicLinkSuccess = document.getElementById('magicLinkSuccess');
    const magicLinkSuccessMessage = document.getElementById('magicLinkSuccessMessage');
    const magicLinkDev = document.getElementById('magicLinkDev');
    const magicLinkUrl = document.getElementById('magicLinkUrl');

    magicLinkForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const email = document.getElementById('magicEmail').value;

      // Show loading state
      magicLinkButton.disabled = true;
      magicLinkButtonText.classList.add('hidden');
      magicLinkButtonSpinner.classList.remove('hidden');
      magicLinkSuccess.classList.add('hidden');
      errorMessage.classList.add('hidden');

      try {
        const response = await fetch('/api/auth/magic-link', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email }),
        });

        const data = await response.json();

        if (data.success) {
          magicLinkSuccessMessage.textContent = data.message;
          magicLinkSuccess.classList.remove('hidden');

          // Show magic link in development mode
          if (data.magicLink) {
            magicLinkUrl.href = data.magicLink;
            magicLinkUrl.textContent = data.magicLink;
            magicLinkDev.classList.remove('hidden');
          }

          // Reset form
          magicLinkForm.reset();
        } else {
          errorMessage.querySelector('p').textContent = data.error;
          errorMessage.classList.remove('hidden');
        }
      } catch (error) {
        errorMessage.querySelector('p').textContent = 'Failed to send magic link. Please try again.';
        errorMessage.classList.remove('hidden');
      } finally {
        // Reset loading state
        magicLinkButton.disabled = false;
        magicLinkButtonText.classList.remove('hidden');
        magicLinkButtonSpinner.classList.add('hidden');
      }
    });
  </script>
</Layout>
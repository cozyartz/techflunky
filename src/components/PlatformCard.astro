---
export interface Props {
  platform: any;
  featured?: boolean;
  className?: string;
}

const { platform, featured = false, className = "" } = Astro.props;

// Package tier styling - matches the certification system in CertificationBadge.astro
const getTierBadge = (tier: string) => {
  const badges = {
    'blueprint': {
      text: 'Blueprint', // FREE basic certification - business canvas + basic validation
      color: 'bg-blue-500/20 text-blue-400 border-blue-400/30',
      glow: 'group-hover:shadow-blue-400/20'
    },
    'launch_ready': {
      text: 'Launch Ready', // $99-$299 - enhanced certification with market analysis
      color: 'bg-green-500/20 text-green-400 border-green-400/30',
      glow: 'group-hover:shadow-green-400/20'
    },
    'enterprise': {
      text: 'Enterprise', // $299-$599 - premium with AI analysis & full validation
      color: 'bg-purple-500/20 text-purple-400 border-purple-400/30',
      glow: 'group-hover:shadow-purple-400/20'
    }
  };
  return badges[tier] || {
    text: 'Platform',
    color: 'bg-gray-500/20 text-gray-400 border-gray-400/30',
    glow: 'group-hover:shadow-gray-400/20'
  };
};

// Price formatting
const formatPrice = (price: number) => {
  return (price / 100).toLocaleString();
};

// Urgency indicator
const getUrgencyIndicator = (urgency: string) => {
  if (urgency === 'limited_time') {
    return {
      text: 'Limited Time',
      color: 'bg-orange-500/20 text-orange-400 border-orange-400/50',
      pulse: 'animate-pulse'
    };
  }
  return null;
};

const tierBadge = getTierBadge(platform.packageTier);
const urgencyBadge = getUrgencyIndicator(platform.urgency);
---

<div class={`group relative bg-gradient-to-br from-gray-900/50 to-black/50 backdrop-blur-md rounded-2xl border border-gray-700/50 hover:border-yellow-400/40 transition-all duration-500 hover:-translate-y-2 hover:shadow-2xl hover:shadow-black/50 cursor-pointer overflow-hidden ${featured ? 'ring-1 ring-yellow-400/30' : ''} ${className}`}>

  <!-- Featured Indicator -->
  {featured && (
    <div class="absolute -top-2 -right-2 z-20">
      <div class="bg-gradient-to-r from-yellow-400 to-yellow-500 text-black text-xs font-bold px-3 py-1 rounded-full shadow-lg">
        FEATURED
      </div>
    </div>
  )}

  <!-- Exclusive Badge -->
  {platform.exclusive && (
    <div class="absolute top-4 left-4 z-10">
      <div class="bg-gradient-to-r from-purple-500/20 to-purple-600/20 border border-purple-400/50 text-purple-300 text-xs font-semibold px-2 py-1 rounded-full backdrop-blur-sm">
        EXCLUSIVE
      </div>
    </div>
  )}

  <!-- Card Content -->
  <div class="p-6 h-full flex flex-col">

    <!-- Header with badges -->
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-2">
        <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold border backdrop-blur-sm ${tierBadge.color}`}>
          {tierBadge.text}
        </span>
        {urgencyBadge && (
          <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-semibold border ${urgencyBadge.color} ${urgencyBadge.pulse}`}>
            {urgencyBadge.text}
          </span>
        )}
      </div>

      <!-- AI Score -->
      <div class="flex items-center gap-1 bg-yellow-400/10 border border-yellow-400/30 rounded-full px-2 py-1">
        <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
        </svg>
        <span class="text-yellow-400 text-xs font-bold">{platform.aiScore}</span>
      </div>
    </div>

    <!-- Title -->
    <h3 class="text-lg font-bold text-white mb-2 line-clamp-2 group-hover:text-yellow-400 transition-colors duration-300">
      {platform.title}
    </h3>

    <!-- Description -->
    <p class="text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed">
      {platform.description}
    </p>

    <!-- Key Metrics -->
    <div class="grid grid-cols-2 gap-3 mb-4">
      <div class="bg-black/30 rounded-lg p-3 border border-gray-700/50">
        <div class="text-xs text-gray-400 mb-1">Market Size</div>
        <div class="text-sm font-bold text-white">{platform.marketSize}</div>
      </div>
      <div class="bg-black/30 rounded-lg p-3 border border-gray-700/50">
        <div class="text-xs text-gray-400 mb-1">Profit Margin</div>
        <div class="text-sm font-bold text-green-400">{platform.profitMargin}</div>
      </div>
    </div>

    <!-- Tech Stack -->
    <div class="mb-4">
      <div class="text-xs text-gray-400 mb-2">Tech Stack</div>
      <div class="flex flex-wrap gap-1">
        {platform.techStack.slice(0, 3).map((tech: string) => (
          <span class="bg-gray-800/50 text-gray-300 text-xs px-2 py-1 rounded border border-gray-600/50">
            {tech}
          </span>
        ))}
        {platform.techStack.length > 3 && (
          <span class="bg-gray-800/50 text-gray-400 text-xs px-2 py-1 rounded border border-gray-600/50">
            +{platform.techStack.length - 3}
          </span>
        )}
      </div>
    </div>

    <!-- Stats -->
    <div class="flex items-center justify-between text-sm mb-4">
      <div class="text-gray-400">
        <span class="text-gray-300 font-medium">{platform.viewsCount.toLocaleString()}</span> views
      </div>
      <div class="text-gray-400">
        <span class="text-gray-300 font-medium">{platform.developmentTime}</span> saved
      </div>
    </div>

    <!-- Price and CTA -->
    <div class="mt-auto">
      <div class="flex items-center justify-between">
        <div>
          <div class="text-xs text-gray-400 mb-1">Complete Package</div>
          <div class="text-2xl font-bold text-yellow-400">
            ${formatPrice(platform.price)}
          </div>
        </div>
        <div class="bg-gradient-to-r from-yellow-400 to-yellow-500 text-black px-4 py-2 rounded-lg font-semibold text-sm transform group-hover:scale-105 transition-transform duration-300 shadow-lg group-hover:shadow-yellow-400/20">
          View Details
        </div>
      </div>
    </div>

    <!-- Seller Info -->
    {platform.seller && (
      <div class="mt-4 pt-4 border-t border-gray-700/50">
        <div class="flex items-center gap-3">
          <div class="w-8 h-8 bg-gradient-to-br from-yellow-400/20 to-yellow-500/20 rounded-full border border-yellow-400/30 flex items-center justify-center">
            <span class="text-yellow-400 font-bold text-xs">
              {platform.seller.name.charAt(0)}
            </span>
          </div>
          <div class="flex-1 min-w-0">
            <div class="flex items-center gap-2">
              <span class="text-sm font-medium text-white truncate">
                {platform.seller.name}
              </span>
              {platform.seller.verified && (
                <svg class="w-4 h-4 text-green-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
              )}
            </div>
            <div class="flex items-center gap-1 text-xs text-gray-400">
              <div class="flex">
                {Array.from({ length: 5 }, (_, i) => (
                  <svg class={`w-3 h-3 ${i < Math.floor(platform.seller.rating) ? 'text-yellow-400' : 'text-gray-600'}`} fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                  </svg>
                ))}
              </div>
              <span class="ml-1">({platform.seller.reviewsCount})</span>
            </div>
          </div>
        </div>
      </div>
    )}
  </div>

  <!-- Hover overlay effect -->
  <div class="absolute inset-0 bg-gradient-to-r from-yellow-400/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl pointer-events-none"></div>

  <!-- Click handler -->
  <a
    href={`/listing/${platform.slug}`}
    class="absolute inset-0 z-10"
    aria-label={`View details for ${platform.title}`}
  >
  </a>
</div>

<style>
  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Enhanced hover effects */
  .group:hover {
    transform: translateY(-8px);
  }

  .group:hover .bg-gradient-to-br {
    background: linear-gradient(to bottom right, rgba(31, 41, 55, 0.8), rgba(0, 0, 0, 0.9));
  }

  /* Custom animations */
  @keyframes float-gentle {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-4px); }
  }

  .group:hover {
    animation: float-gentle 2s ease-in-out infinite;
  }
</style>